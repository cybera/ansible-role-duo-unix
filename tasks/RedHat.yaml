---
# RedHat tasks file for ansible-role-duo-unix/

- name: "Install required packages (RHEL - yum)"
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"
  when:
    - ansible_facts['distribution_major_version'] <= '7'

- name: "Install required packages (RHEL - dnf)"
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"
  when:
    - ansible_facts['distribution_major_version'] >= '8'

- name: "Import Duo Security Repository Key (RedHat)"
  ansible.builtin.rpm_key:
    key: /tmp/DUO-GPG-PUBLIC-KEY.asc
    state: present

- name: "Check if host is registered to a Spacewalk server (CentOS)"
  ansible.builtin.stat:
    path: /etc/sysconfig/rhn/systemid
  register: systemid
  when:
    - ansible_facts['distribution'] == 'CentOS'
    - '"rhncfg-client" in ansible_facts.packages'

- name: "Check if Duo Security Repository is added via Spacewalk (CentOS)"
  ansible.builtin.shell: rhn-channel --list | grep -i "duo"
  register: repo
  when:
    - ansible_facts['distribution'] == 'CentOS'
    - systemid.stat.exists

- name: "Create Duo Security Repository (RedHat)"
  ansible.builtin.yum_repository:
    name: duosecurity
    description: "Duo Security Repository"
    baseurl: "https://pkg.duosecurity.com/{{ ansible_distribution }}/$releasever/$basearch"
    enabled: yes
    gpgcheck: no
    state: present
  when:
    - ansible_facts['distribution'] == 'RedHat'
  #when: not systemid.stat.exists or repo.rc != 0

- name: "Install duo_unix package (RHEL - yum)"
  ansible.builtin.yum:
    name: "duo_unix"
    state: present
  when:
    - ansible_facts['distribution_major_version'] <= '7'

- name: "Install duo_unix package (RHEL - dnf)"
  ansible.builtin.dnf:
    name: "duo_unix"
    state: present
  when:
    - ansible_facts['distribution_major_version'] >= '8'

- name: "Deploy pam_duo.conf Template (RedHat)"
  ansible.builtin.template:
    src: pam_duo.j2
    dest: /etc/duo/pam_duo.conf
    force: yes

- name: "Set auth pam_unix.so to requisite in system-auth (RedHat)"
  community.general.pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_control: requisite
    backup: true

- name: "Add auth pam_duo.so to system-auth (RedHat)"
  community.general.pamd:
    name: system-auth
    type: auth
    control: requisite
    module_path: pam_unix.so
    new_type: auth
    new_control: sufficient
    new_module_path: pam_duo.so
    state: after

- name: "Add auth pam_sepermit.so to sshd (RedHat)"
  community.general.pamd:
    name: sshd
    type: auth
    control: substack
    module_path: password-auth
    new_type: auth
    new_control: required
    new_module_path: pam_sepermit.so
    backup: true
    state: before

- name: "Add auth pam_env.so to sshd (RedHat)"
  community.general.pamd:
    name: sshd
    type: auth
    control: required
    module_path: pam_sepermit.so
    new_type: auth
    new_control: required
    new_module_path: pam_env.so
    state: after

- name: "Remove auth password-auth from sshd (RedHat)"
  community.general.pamd:
    name: sshd
    type: auth
    control: substack
    module_path: password-auth
    state: absent

- name: "Add auth pam_duo.so to sshd (RedHat)"
  community.general.pamd:
    name: sshd
    type: auth
    control: required
    module_path: pam_env.so
    new_type: auth
    new_control: sufficient
    new_module_path: pam_duo.so
    state: after

- name: "Add auth pam_deny.so to sshd (RedHat)"
  community.general.pamd:
    name: sshd
    type: auth
    control: sufficient
    module_path: pam_duo.so
    new_type: auth
    new_control: required
    new_module_path: pam_deny.so
    state: after

- name: "Add auth pam_succeed_if.so to sshd (RedHat 8/7)"
  community.general.pamd:
    name: sshd
    type: auth
    control: sufficient
    module_path: pam_duo.so
    new_type: auth
    new_control: requisite
    new_module_path: pam_succeed_if.so
    module_arguments: 'uid >= 1000 quiet_success'
    state: after
  when:
    - ansible_facts['distribution_major_version'] == '8' or ansible_facts['distribution_major_version'] == '7'
